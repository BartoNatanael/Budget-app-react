{"version":3,"sources":["data/fetch/budget.fetch.js","data/fetch/common.fetch.js","data/fetch/index.js","pages/Budget/components/AddTransactionForm/AddTransactionForm.js","pages/Budget/components/AddTransactionForm/AddTransactionView.js"],"names":["fetchBudget","a","id","fetch","process","response","json","data","fetchBudgetWithCategories","fetchBudgets","fetchOneBudget","fetchBudgetedCategories","addTransaction","budgetId","method","headers","body","JSON","stringify","deleteTransaction","addBudget","modifyBudget","obj","modifyBudgetCategory","budgetCategoryId","addBudgetCategory","deleteBudgetCategory","fetchAllCategories","budget","common","required","value","undefined","AddTransactionForm","onSubmit","noop","categories","groupCategoriesBy","groupedCategoriesByParentName","groupBy","categoryItems","useMemo","Object","entries","map","parentName","key","label","category","name","render","handleSubmit","form","submitting","pristine","values","validate","input","meta","type","placeholder","error","touched","parse","parseFloat","step","className","disabled","onClick","reset","connect","state","selectedBudgetId","useQuery","API","allCategories","useMutation","refetchQueries","mutate","history","useHistory","then","goBack"],"mappings":"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","file":"static/js/11.460f87dd.chunk.js","sourcesContent":["export const fetchBudget = async({id}) => {\n    const response  = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgetWithCategories = async({id}) => {\n    const response  = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=budgetCategories`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgets = async() => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchOneBudget = async({id}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgetedCategories = async({id}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/budgetCategories`);\n    const data = await response.json();\n    return data;\n};\n\nexport const addTransaction = async({budgetId, data}) => {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`,\n        {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }\n        );\n    return await response.json();\n};\n\nexport const deleteTransaction = async({id}) => {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/transactions/${id}`,\n        {\n            method: \"DELETE\"\n        }\n    )\n    return await response.json();\n}\n\nexport const addBudget = async({data}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets`,\n    {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }\n    );\n    return await response.json();\n}\n\nexport const modifyBudget = async({budgetId, obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${budgetId}`,\n    {\n        method: \"PUT\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\n\nexport const modifyBudgetCategory = async({budgetCategoryId, obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/${budgetCategoryId}`,\n    {\n        method: \"PUT\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\nexport const addBudgetCategory = async({obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/`,\n    {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\nexport const deleteBudgetCategory = async({budgetCategoryId}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/${budgetCategoryId}`,\n    {\n        method: \"DELETE\"\n    }\n    );\n    return await response.json();\n}","export const fetchAllCategories = async() => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`);\n    const data = await response.json();\n    return data;\n};\n","import * as budget from './budget.fetch';\nimport * as common from './common.fetch';\n\nexport default {\n    budget,\n    common\n}","import React, { useMemo } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { groupBy, noop } from 'lodash';\n\nconst required = value => (value ? undefined : 'This field is Required!');\n\nfunction AddTransactionForm({ onSubmit = noop, categories, groupCategoriesBy }) {\n  const groupedCategoriesByParentName = groupCategoriesBy\n    ? groupBy(categories, groupCategoriesBy)\n    : null;\n    \n  const categoryItems = useMemo(\n    () => groupedCategoriesByParentName\n      ? Object.entries(groupedCategoriesByParentName)\n        .map(([parentName, categories]) => (\n          <optgroup key={parentName} label={parentName}>\n            {categories.map(category => (\n              <option key={category.id} value={category.id}>{category.name}</option>\n            ))}\n          </optgroup>\n        ))\n      : categories.map(category => (\n        <option value={category.id}>{category.name}</option>\n      )),\n    [groupedCategoriesByParentName, categories]\n  );\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      render={({ handleSubmit, form, submitting, pristine, values }) => (\n        <form onSubmit={handleSubmit}>\n          <Field name=\"description\" validate={required}>\n            {({ input, meta }) => (\n              <div>\n                <label>Description</label>\n                <input {...input} type=\"text\" placeholder=\"Description\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <Field name=\"amount\" validate={required} parse={value => parseFloat(value, 10)}>\n            {({ input, meta }) => (\n              <div>\n                <label>Amount</label>\n                <input {...input} type=\"number\" step=\"0.01\" placeholder=\"Amount\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <Field name=\"categoryId\" validate={required}>\n            {({ input, meta }) => (\n              <div>\n                <label>Category</label>\n                <select {...input}>\n                  {categoryItems}\n                </select>\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n          <Field name=\"date\" validate={required}>\n            {({ input, meta }) => (\n              <div>\n                <label>Date</label>\n                <input {...input} type=\"date\" placeholder=\"Date\" />\n                {meta.error && meta.touched && <span>{meta.error}</span>}\n              </div>\n            )}\n          </Field>\n\n          <div className=\"buttons\">\n            <button type=\"submit\" disabled={submitting}>\n              Submit\n          </button>\n            <button\n              type=\"button\"\n              onClick={form.reset}\n              disabled={submitting || pristine}\n            >\n              Reset\n          </button>\n          </div>\n        </form>\n      )}\n    />\n  )\n}\n\nexport default AddTransactionForm;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery, useMutation } from 'react-query';\nimport { useHistory } from 'react-router-dom';\n\nimport API from 'data/fetch';\nimport AddTransactionForm from './AddTransactionForm';\n\nfunction AddTransactionView({ budgetId }){\n    const { data: budget } = useQuery(['budget', {id: budgetId}], API.budget.fetchBudget);\n    const { data: allCategories } = useQuery('allCategories', API.common.fetchAllCategories);\n    const [mutate] = useMutation(API.budget.addTransaction,{\n      refetchQueries: [\n        ['budget', {id: budgetId}],\n      ],\n    });\n    const history = useHistory();\n\n    const handleSubmitAddTransaction = (values) => {\n        mutate({\n          budgetId: budget.id,\n          data: values,\n        }).then(()=>{\n          history.goBack();\n        })\n      }\n    return(\n        <AddTransactionForm\n            categories={allCategories}\n          groupCategoriesBy='parentCategory.name'\n          onSubmit={handleSubmitAddTransaction}\n        />\n    )\n};\n\nexport default connect(state => ({\n  budgetId : state.budget.selectedBudgetId,\n}))(AddTransactionView);"],"sourceRoot":""}