{"version":3,"sources":["data/fetch/budget.fetch.js","data/fetch/common.fetch.js","data/fetch/index.js","data/actions/budget.action.js","utils/index.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.css.js","pages/Budget/components/BudgetCategoryList/ParentCategory.js","pages/Budget/components/BudgetCategoryList/CategoryItem.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.js"],"names":["fetchBudget","a","id","fetch","process","response","json","data","fetchBudgetWithCategories","fetchBudgets","fetchOneBudget","fetchBudgetedCategories","addTransaction","budgetId","method","headers","body","JSON","stringify","deleteTransaction","addBudget","modifyBudget","obj","modifyBudgetCategory","budgetCategoryId","addBudgetCategory","deleteBudgetCategory","fetchAllCategories","budget","common","selectParentCategory","type","SET_SELECTED_PARENT_CATEGORY_ID","payload","selectBudgetId","SET_BUDGET_ID","setBudgetedCategories","categories","SET_BUDGETED_CATEGORIES","formatCurrency","value","number","Number","Intl","NumberFormat","style","currency","format","formatDate","string","date","Date","DateTimeFormat","Category","styled","div","theme","colors","gray","dark","spacing","xs","ParentCategory","normal","CategoryItem","light","CategoryAmount","span","negative","red","green","name","onClick","transactions","amount","categoryLeftValue","useMemo","budgeted","reduce","acc","category","error","spentOnParentCategory","filter","transaction","find","categoryId","amountValue","item","spentOnCategory","totalLeft","connect","state","selectedBudgetId","actualBudgetedCategories","budgetedCategories","useQuery","API","allCategories","t","useTranslation","console","log","budgetedCategoriesByParent","groupBy","parentCategory","handleClickParentCategoryRef","useRef","handleClearParentCagetogySelect","useCallback","current","handleSelectRestParentCategories","listItems","Object","entries","map","parentName","Trigger","children","key","totalSpent","restToSpent","totalAmount","amountTaken","budgetedCategory","categoryExpenses","Math","max","notBudgetedTransaction","notBudgetedExpenses","availableForRestCategories","items","clickRef","to"],"mappings":"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","file":"static/js/5.c48dda2d.chunk.js","sourcesContent":["export const fetchBudget = async({id}) => {\n    const response  = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgetWithCategories = async({id}) => {\n    const response  = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=budgetCategories`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgets = async() => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchOneBudget = async({id}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgetedCategories = async({id}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/budgetCategories`);\n    const data = await response.json();\n    return data;\n};\n\nexport const addTransaction = async({budgetId, data}) => {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`,\n        {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }\n        );\n    return await response.json();\n};\n\nexport const deleteTransaction = async({id}) => {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/transactions/${id}`,\n        {\n            method: \"DELETE\"\n        }\n    )\n    return await response.json();\n}\n\nexport const addBudget = async({data}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets`,\n    {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }\n    );\n    return await response.json();\n}\n\nexport const modifyBudget = async({budgetId, obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${budgetId}`,\n    {\n        method: \"PUT\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\n\nexport const modifyBudgetCategory = async({budgetCategoryId, obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/${budgetCategoryId}`,\n    {\n        method: \"PUT\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\nexport const addBudgetCategory = async({obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/`,\n    {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\nexport const deleteBudgetCategory = async({budgetCategoryId}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/${budgetCategoryId}`,\n    {\n        method: \"DELETE\"\n    }\n    );\n    return await response.json();\n}","export const fetchAllCategories = async() => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`);\n    const data = await response.json();\n    return data;\n};\n","import * as budget from './budget.fetch';\nimport * as common from './common.fetch';\n\nexport default {\n    budget,\n    common\n}","import {\n    SET_SELECTED_PARENT_CATEGORY_ID,\n    SET_BUDGET_ID,\n    SET_BUDGETED_CATEGORIES\n} from 'data/constants';\n\nexport const selectParentCategory = (id) => {\n    return {\n        type: SET_SELECTED_PARENT_CATEGORY_ID,\n        payload: id,\n    }\n};\n\nexport const selectBudgetId = (id) => {\n    return {\n        type: SET_BUDGET_ID,\n        payload: id,\n    }\n}\n\nexport const setBudgetedCategories = (categories) => {\n    return {\n        type: SET_BUDGETED_CATEGORIES,\n        payload: categories\n    }\n}","export const formatCurrency = value => {\n    const number = Number(value);\n\n    return new Intl.NumberFormat('pl', {style: 'currency', currency: \"PLN\"}).format(number);\n}\n\nexport const formatDate = string => {\n    const date = new Date(string);\n\n    return new Intl.DateTimeFormat('pl').format(date);\n}","import styled from 'styled-components';\n\nexport const Category = styled.div`\n    border: 1px solid ${({theme}) => theme.colors.gray.dark};\n    padding: ${({theme})=> theme.spacing.xs}px;\n    display: flex;\n    justify-content: space-between;\n    cursor: pointer;\n`;\n\nexport const ParentCategory = styled(Category)`\n    background-color: ${({theme}) => theme.colors.gray.normal};\n`;\n\nexport const CategoryItem = styled(Category)`\n    background-color: ${({theme}) => theme.colors.gray.light};\n`;\n\nexport const CategoryAmount = styled.span`\n    font-weight: 700;\n    color: ${({ theme, negative }) => negative ? theme.colors.red.normal : theme.colors.green.normal}\n`;","import React, {useMemo} from 'react';\n\nimport { ParentCategory as Root, CategoryAmount} from './BudgetCategoryList.css';\nimport { formatCurrency } from 'utils';\n\nfunction ParentCategory ({ name, onClick, categories, transactions, amount }){\n    const categoryLeftValue = useMemo(()=>{\n        if(!!amount) return null;\n        const budgeted = (()=> {\n            try{\n                return categories.reduce((acc, category) => acc + category.budget, 0)\n            } catch (error){\n                return null;\n            }\n        })();\n\n        const parentCategoryTransactions = transactions\n            .filter(transaction => {\n                return categories.find(category => category.categoryId === transaction.categoryId)\n            });\n\n            const spentOnParentCategory = parentCategoryTransactions.reduce((acc, transaction) => acc + transaction.amount, 0);\n\n            const totalLeft =\n            budgeted\n                ? budgeted - spentOnParentCategory\n                : null;\n\n            return totalLeft;\n    }, [categories, transactions, amount]);\n\n    const amountValue = useMemo(\n        ()=> amount || categoryLeftValue,\n        [amount, categoryLeftValue]\n    )\n\n    return (\n        <Root onClick={onClick}>\n            <span>{name}</span>\n            <CategoryAmount negative={amountValue < 0}>\n                {formatCurrency(amountValue)}\n            </CategoryAmount>\n        </Root>\n    )\n}\n\nexport default ParentCategory;","import React from 'react';\nimport { CategoryItem as Root, CategoryAmount} from './BudgetCategoryList.css';\nimport { formatCurrency } from 'utils';\n\nfunction CategoryItem ({ name, item, transactions }){\n    const categoryTransactions = transactions\n        .filter(transaction => transaction.categoryId === item.id);\n\n    const spentOnCategory = categoryTransactions.reduce((acc, transaction) => acc + transaction.amount, 0);\n    const totalLeft = item.budget - spentOnCategory;\n    return (\n        <Root>\n            <span>{name}</span>\n            <CategoryAmount negative={totalLeft < 0}>\n                {formatCurrency(totalLeft)}\n            </CategoryAmount>\n        </Root>\n    )\n}\n\nexport default CategoryItem;","import React, { useMemo, useRef, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { groupBy } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport API from 'data/fetch';\nimport 'styled-components/macro';\n\nimport {ToggleableList, Button} from 'components';\nimport ParentCategory from './ParentCategory';\nimport CategoryItem from './CategoryItem';\n\nimport { selectParentCategory, setBudgetedCategories } from 'data/actions/budget.action';\nimport { useEffect } from 'react';\n\nfunction BudgetCategoryList({ budgetId, actualBudgetedCategories, selectParentCategory, setBudgetedCategories }) {\n        \n    const { data: budget } = useQuery(['budget', {id: budgetId}], API.budget.fetchBudget);\n    const { data: allCategories } = useQuery('allCategories', API.common.fetchAllCategories);\n    const { data: budgetedCategories } = useQuery(\n            ['budgetedCategories', {id: budgetId}], \n            API.budget.fetchBudgetedCategories);\n    const { t } = useTranslation();\n    // useEffect(() => {\n    //   console.log(budgetedCategories)\n    //   setBudgetedCategories(budgetedCategories);\n    // }, [budgetId]);\n    console.log(budgetedCategories)\n    setBudgetedCategories(budgetedCategories);\n    const budgetedCategoriesByParent = useMemo(\n        () => groupBy(\n          actualBudgetedCategories, \n            item => allCategories.find(category => category.id === item.categoryId).parentCategory.name),\n        [actualBudgetedCategories, allCategories],\n      );\n\n    const handleClickParentCategoryRef = useRef(null);\n\n    const handleClearParentCagetogySelect = useCallback(() => {\n        handleClickParentCategoryRef.current();\n        selectParentCategory();\n    },[selectParentCategory, handleClickParentCategoryRef]\n    );\n\n    const handleSelectRestParentCategories = useCallback(() => {\n        selectParentCategory(null);\n        handleClickParentCategoryRef.current();\n    },[selectParentCategory, handleClickParentCategoryRef]\n    );\n\n    const listItems = useMemo(\n        ()=>Object.entries(budgetedCategoriesByParent).map(([parentName, categories])=>({\n        id: parentName,\n        Trigger: ({ onClick }) => (\n            <ParentCategory\n          name={parentName}\n          onClick={() => {\n                onClick(parentName);\n                selectParentCategory(parentName)}}\n          categories={categories}\n          transactions={budget.transactions}\n        />\n        ),\n        children: categories.map(budgetedCategories=>{\n            const {name} = allCategories.find(category => category.id === budgetedCategories.categoryId)\n            return(\n                <CategoryItem\n                key={budgetedCategories.id}\n                name={name}\n                item={budgetedCategories}\n                transactions={budget.transactions}\n                />\n                )\n            }),\n        })),\n        [allCategories, budget.transactions, budgetedCategoriesByParent, selectParentCategory]\n    );\n\n    const totalSpent = useMemo(()=>\n        budget.transactions\n            .reduce((acc, transaction) => acc + transaction.amount, 0),\n            [budget.transactions]\n        );\n\n    const restToSpent = useMemo(()=>\n        budget.totalAmount - totalSpent,\n        [budget.totalAmount, totalSpent]\n        );\n    const amountTaken = useMemo(()=>\n        budgetedCategories.reduce((acc, budgetedCategory) => {\n        const categoryTransactions = budget.transactions\n            .filter(transaction => transaction.id === budgetedCategory.id);\n        const categoryExpenses = categoryTransactions\n            .reduce((acc, transaction)=> acc + transaction.amount, 0);\n\n        return acc + Math.max(categoryExpenses, budgetedCategory.budget);\n    }, 0),\n    [budget.transactions, budgetedCategories]\n    );\n\n    const notBudgetedTransaction = useMemo(()=>\n        budget.transactions\n        .filter(transaction => {\n            return !budgetedCategories\n                .find(budgetedCategory=> budgetedCategory.id === transaction.categoryId)\n            }),\n            [budget.transactions, budgetedCategories]\n            );\n    const notBudgetedExpenses = useMemo(()=>\n        notBudgetedTransaction.reduce((acc, transaction) => acc + transaction.amount, 0),\n        [notBudgetedTransaction]\n        );\n    \n    const availableForRestCategories = useMemo(()=>\n        budget.totalAmount - amountTaken - notBudgetedExpenses,\n        [budget.totalAmount, amountTaken, notBudgetedExpenses]\n        );\n    \n    return(\n        <div>\n            <div\n                css={`\n                    border-bottom: 5px solid ${({theme}) => theme.colors.gray.light}\n                `}\n            >\n                <ParentCategory\n                name={budget.name}\n                amount={restToSpent}\n                onClick={handleClearParentCagetogySelect}\n            />\n            </div>\n            \n            <ToggleableList\n                items={listItems}\n                clickRef={handleClickParentCategoryRef}\n            />\n            <div\n                css={`\n                border-top: 5px solid ${({theme}) => theme.colors.gray.light}\n            `}\n            >\n                <ParentCategory\n                name={t('Other Categories')}\n                amount={availableForRestCategories}\n                onClick={handleSelectRestParentCategories}\n            />\n            </div>\n            <Button to='/budget/choose'>Wybierz budżet</Button>\n            <Button to='/budget/add'>Dodaj budżet</Button>\n            <Button to='/budget/delete'>Usuń budżet</Button>\n        </div>\n    )\n}\n\nexport default connect(state => ({\n    budgetId : state.budget.selectedBudgetId,\n    actualBudgetedCategories: state.budget.budgetedCategories\n}),{\n    selectParentCategory,\n    setBudgetedCategories\n})(BudgetCategoryList);"],"sourceRoot":""}