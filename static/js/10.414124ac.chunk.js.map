{"version":3,"sources":["data/fetch/budget.fetch.js","data/fetch/common.fetch.js","data/fetch/index.js","utils/index.js","pages/Budget/components/BudgetTransactionList/BudgetTransactionList.css.js","pages/Budget/components/BudgetTransactionList/BudgetTransactionList.js"],"names":["fetchBudget","a","id","fetch","process","response","json","data","fetchBudgetWithCategories","fetchBudgets","fetchOneBudget","fetchBudgetedCategories","addTransaction","budgetId","method","headers","body","JSON","stringify","deleteTransaction","addBudget","modifyBudget","obj","modifyBudgetCategory","budgetCategoryId","addBudgetCategory","deleteBudgetCategory","fetchAllCategories","budget","common","formatCurrency","value","number","Number","Intl","NumberFormat","style","currency","format","formatDate","string","date","Date","DateTimeFormat","List","styled","ul","theme","spacing","xs","ListItem","li","colors","gray","dark","connect","state","selectedParentCategoryId","selectedBudgetId","useQuery","API","allCategories","budgetedCategories","useMutation","refetchQueries","mutate","filteredTransactionsBySelectedParentCategory","useMemo","transactions","filter","transaction","some","budgetedCategory","categoryId","find","category","parentCategory","name","error","groupedTransactions","groupBy","getUTCDate","Object","entries","map","key","description","amount","onClick"],"mappings":"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","file":"static/js/10.414124ac.chunk.js","sourcesContent":["export const fetchBudget = async({id}) => {\n    const response  = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgetWithCategories = async({id}) => {\n    const response  = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=budgetCategories`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgets = async() => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchOneBudget = async({id}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}`);\n    const data = await response.json();\n    return data;\n};\n\nexport const fetchBudgetedCategories = async({id}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${id}/budgetCategories`);\n    const data = await response.json();\n    return data;\n};\n\nexport const addTransaction = async({budgetId, data}) => {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`,\n        {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }\n        );\n    return await response.json();\n};\n\nexport const deleteTransaction = async({id}) => {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/transactions/${id}`,\n        {\n            method: \"DELETE\"\n        }\n    )\n    return await response.json();\n}\n\nexport const addBudget = async({data}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets`,\n    {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }\n    );\n    return await response.json();\n}\n\nexport const modifyBudget = async({budgetId, obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgets/${budgetId}`,\n    {\n        method: \"PUT\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\n\nexport const modifyBudgetCategory = async({budgetCategoryId, obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/${budgetCategoryId}`,\n    {\n        method: \"PUT\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\nexport const addBudgetCategory = async({obj}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/`,\n    {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n    }\n    );\n    return await response.json();\n}\n\nexport const deleteBudgetCategory = async({budgetCategoryId}) => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/budgetCategories/${budgetCategoryId}`,\n    {\n        method: \"DELETE\"\n    }\n    );\n    return await response.json();\n}","export const fetchAllCategories = async() => {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`);\n    const data = await response.json();\n    return data;\n};\n","import * as budget from './budget.fetch';\nimport * as common from './common.fetch';\n\nexport default {\n    budget,\n    common\n}","export const formatCurrency = value => {\n    const number = Number(value);\n\n    return new Intl.NumberFormat('pl', {style: 'currency', currency: \"PLN\"}).format(number);\n}\n\nexport const formatDate = string => {\n    const date = new Date(string);\n\n    return new Intl.DateTimeFormat('pl').format(date);\n}","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  > li + li {\n    margin-top: ${({ theme }) => theme.spacing.xs}px;\n  }\n\n  li {\n    margin: 0;\n  }\n`;\n\nexport const ListItem = styled.li`\n  border: 1px solid ${({ theme }) => theme.colors.gray.dark};\n  padding: ${({ theme }) => theme.spacing.xs}px;\n  display: flex;\n  justify-content: space-between;\n\n  > *:nth-child(1) {\n    flex: 4;\n  }\n  > *:nth-child(2) {\n    flex: 2;\n  }\n  > *:nth-child(3) {\n    flex: 3;\n  }\n  > *:nth-child(4) {\n    flex: 1;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { groupBy } from 'lodash';\nimport { useQuery, useMutation } from 'react-query';\n\nimport { formatCurrency, formatDate } from 'utils';\nimport API from 'data/fetch';\n\nimport { List, ListItem } from './BudgetTransactionList.css';\nimport { Button } from 'components';\n\nfunction BudgetTransactionList({ budgetId, selectedParentCategoryId }){\n    const { data: budget } = useQuery(['budget', {id: budgetId}], API.budget.fetchBudget);\n    const { data: allCategories } = useQuery('allCategories', API.common.fetchAllCategories);\n    const { data: budgetedCategories } = useQuery(\n        ['budgetedCategories', {id: budgetId}], \n        API.budget.fetchBudgetedCategories);\n    const [mutate] = useMutation(API.budget.deleteTransaction,{\n        refetchQueries: [\n          ['budget', {id: budgetId}],\n        ],\n    });\n\n    const filteredTransactionsBySelectedParentCategory = useMemo(() => {\n    if (typeof selectedParentCategoryId === 'undefined') {\n      return budget.transactions;\n    }\n\n    if (selectedParentCategoryId === null) {\n      return budget.transactions.filter(transaction => {\n        const hasBudgetedCategory = budgetedCategories\n          .some(budgetedCategory => budgetedCategory.categoryId === transaction.categoryId);\n\n        return !hasBudgetedCategory;\n      });\n    }\n\n    return budget.transactions.filter(transaction => {\n      try {\n        const parentCategoryName = allCategories.find(category => category.id === transaction.categoryId).parentCategory.name;\n\n        return parentCategoryName === selectedParentCategoryId;\n      } catch (error) {\n        return false;\n      }\n    });\n  }, [selectedParentCategoryId, budget.transactions, allCategories, budgetedCategories]);\n\n    const groupedTransactions = useMemo(()=>\n        groupBy(\n            filteredTransactionsBySelectedParentCategory,\n            transaction => new Date(transaction.date).getUTCDate()\n        ),\n        [filteredTransactionsBySelectedParentCategory]\n    );\n\n    const deleteTransaction = (id) => {\n      mutate({\n        id\n      })\n    };\n\n    return(\n       <List>\n            {Object.entries(groupedTransactions).map(([key, transactions])=>(\n                <li key={key}>\n                    <ul>\n                        {transactions.map(transaction =>(\n                            <ListItem key={transaction.id}>\n                                <div>{transaction.description}</div>\n                                <div>{formatCurrency(transaction.amount)}</div>\n                                <div>{formatDate(transaction.date)}</div>\n                                <div>\n                                    {(allCategories.find(category => category.id === transaction.categoryId) || {}).name}\n                                    </div>\n                                <Button onClick={() => deleteTransaction(transaction.id)}>Delete</Button>\n                            </ListItem>\n                        ))}\n                    </ul>\n                </li>\n                ))}          \n       </List> \n    )\n}\n\nexport default connect(state => ({\n    selectedParentCategoryId: state.budget.selectedParentCategoryId,\n    budgetId: state.budget.selectedBudgetId\n}))(BudgetTransactionList);"],"sourceRoot":""}